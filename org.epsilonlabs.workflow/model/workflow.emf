@namespace(uri="http://org.crossminer.workflow", prefix="wf")
@gmf
package workflow;

@gmf.diagram(onefile="true")
class Workflow {
  attr String name;
  val Task[*] tasks;
  val CommunicationChannel[*] channels;
  val DataStructure[*] globalVariables;
}

@gmf.node(label="name")
class Task {
  attr String name;
  attr boolean[1] acceptsPartialData;
  attr boolean[1] providesPartialData;
  @gmf.link
  ref CommunicationChannel[*]#outgoing incoming;
  ref CommunicationChannel[*]#incoming outgoing;
  val DataStructure[*] localVariables;
}

class JavaTask extends Task {
  attr String implementationFullyQualifiedName;
  attr String implementationEntryPoint;
}

class ScriptedTask extends Task {
  attr String scriptType;
  attr String script;
}

@gmf.node(label.placement="none")
class CommunicationChannel {
  attr String name;
  @gmf.link
  ref Task[*]#outgoing incoming;
  ref Task[*]#incoming outgoing;
  @gmf.compartment
  val DataStructure[1] type;
}

class RemoteCommunicationChannel extends CommunicationChannel {
  attr String[1] address;
  attr int[1] port;
  attr boolean[1] singleQueue;
  attr QueuePersistanceOptions[1] queuePersistance;
}

enum QueuePersistanceOptions {
  none = 0;
  full = 1;
  partial = 2;
}

@gmf.node(label="name")
class DataStructure {
  attr String[1] name;
  @gmf.compartment
  val ecore.EClassifier[1] type;
  attr boolean[1] isMany;
}
