@namespace(uri="http://org.crossminer.workflow", prefix="wf")
package workflow;

@gmf.diagram(onefile="true")
class Workflow {
  attr EString name;
  val Task[*] tasks;
  val TaskCommunicationConfiguration[*] configs;
  val Variable[*] globals;
}

@gmf.node(label="name")
class Task {
  attr EString name;
  @gmf.label
  attr TaskConcurrency[1] concurrency;
  @gmf.label
  attr EString implementationFullyQualifiedName;
  @gmf.label
  attr EString implementationEntryPoint;
  @gmf.label
  attr EBoolean[1] acceptsPartialData;
  ref TaskCommunicationConfiguration[*]#outgoing incoming;
  @gmf.compartment
  val Variable[*] locals;
}

class EmittingTask extends Task {
  @gmf.label
  attr EBoolean[1] providesPartialData;
  ref TaskCommunicationConfiguration[+]#incoming outgoing;
}

@gmf.link(source="incoming", target="outgoing")
class TaskCommunicationConfiguration {
  ref EmittingTask[*]#outgoing incoming;
  ref Task[*]#incoming outgoing;
}

@gmf.link(label="address,port,singleQueue,queuePersistance",style="dot")
class RemoteTaskCommunicationConfiguration extends TaskCommunicationConfiguration {
  @gmf.label
  attr EString[1] address;
  @gmf.label
  attr EInt[1] port;
  @gmf.label
  attr EBoolean[1] singleQueue;
  @gmf.label
  attr QueuePersistanceOptions[1] queuePersistance;
}

enum TaskConcurrency {
  none = 0;
  full = 1;
  partial = 2;
}

enum QueuePersistanceOptions {
  none = 0;
  full = 1;
  partial = 2;
}

@gmf.node(label="name",icon="false")
abstract class Variable {
  attr EString[1] name;
}

class String extends Variable {
  @gmf.label
  attr EString[+] value;
}

class Integer extends Variable {
  @gmf.label
  attr EInt[+] value;
}

class Boolean extends Variable {
  @gmf.label
  attr EBoolean[+] value;
}

class Double extends Variable {
  @gmf.label
  attr EDouble[+] value;
}

